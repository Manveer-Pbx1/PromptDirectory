name: CI Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  PYTHON_VERSION: '3.11'

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4

    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        cd API/promptDirectory
        pip install -r requirements.txt
        pip install pytest pytest-django

    - name: 🛠️ Install Keploy CLI
      run: |
        curl --silent -L https://keploy.io/ent/install.sh | bash

    - name: Run Keploy Test Suite
      run: |
        export KEPLOY_API_KEY=${{ secrets.KEPLOY_API_KEY } && keploy test-suite --app=6b790b75-a578-4db7-b83b-0ddd61d9fff3 --base-path http://localhost:8000/api --cloud
        
    - name: 🧪 Run Tests
      env:
        MONGO_URI: mongodb://localhost:27017
        MONGO_DB: promptDirectory_test
      run: |
        cd API/promptDirectory
        python manage.py test

  lint:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4

    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: 📦 Install Linting Tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black

    - name: 🎨 Check Code Formatting
      run: |
        cd API/promptDirectory
        black --check .
      continue-on-error: true

    - name: 🔍 Lint Code
      run: |
        cd API/promptDirectory
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      continue-on-error: true

  validate-api:
    name: 📋 Validate API Schema
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4

    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: 📦 Install Validator
      run: pip install openapi-spec-validator

    - name: ✅ Validate OpenAPI Schema
      run: openapi-spec-validator openapi.yaml
